# This workflow checks out code, builds an image, performs a container image
# scan, evaluates the image, and promotes it if it passes.

name: Nightly-Unstable

on: 
  #push:
  #  branches:
  #    - main
  schedule:
    - cron: '12 22 * * 1-5'
  workflow_dispatch:
    inputs:
      mode:
        description: 'Manual Build'  
        
env:
  ANCHORECTL_USERNAME: ${{ secrets.ANCHORECTL_USERNAME }}
  ANCHORECTL_PASSWORD: ${{ secrets.ANCHORECTL_PASSWORD }}
  ANCHORECTL_URL: ${{ secrets.ANCHORECTL_URL }}
  IMAGE_REGISTRY: "ghcr.io"
  IMAGE_TAG: "nightly-"
  TAG_BASE: "unstable"
  RELEASE_REGISTRY: "docker.io"
  RELEASE_TAG: ""
  DOCKERFILE: ".testing/Dockerfile-unstable"

  
jobs:

  Build-Push:
    runs-on: ubuntu-latest
    steps:
    
    - name: "Set environmental variables"
      run: |
        echo "IMAGE=${IMAGE_REGISTRY}/${GITHUB_REPOSITORY}:${IMAGE_TAG}${TAG_BASE}-test" >> $GITHUB_ENV
        echo "image: ${IMAGE}"
    
    - name: Checkout Code
      uses: actions/checkout@v3    

    - name: Build Local Container
      run: |
        docker build . --file ${DOCKERFILE} --tag ${IMAGE}

    - name: Login to Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${IMAGE_REGISTRY} -u ${GITHUB_ACTOR} --password-stdin

    - name: Push Docker Image
      run: |
        docker push ${IMAGE}
        
        
  Smoke-Test:
    needs: Build-Push
    runs-on: ubuntu-latest        
    steps:
    - name: "Set environmental variables"
      run: |
        echo "IMAGE=${IMAGE_REGISTRY}/${GITHUB_REPOSITORY}:${IMAGE_TAG}${TAG_BASE}-test" >> $GITHUB_ENV
    - name: "Version checks"
      run: | 
        docker run --rm ${IMAGE} anchorectl version
        docker run --rm ${IMAGE} syft version
        docker run --rm ${IMAGE} grype version
    - name: "Test anchorectl"
      run: |
        docker run --rm --env ANCHORECTL_USERNAME --env ANCHORECTL_PASSWORD --env ANCHORECTL_URL ${IMAGE} anchorectl system status
    - name: "Test syft"
      run: |
        docker run --rm ${IMAGE} syft alpine:latest
    - name: "Test grype"
      run: |
        docker run --rm ${IMAGE} grype alpine:latest
    - name: "Test jq"
      run: |
        docker run --rm ${IMAGE} sh -c "syft -o json alpine:latest | jq .artifacts[].name"
    - name: "Test syft-anchorectl"
      run: |
        docker run --rm --env ANCHORECTL_USERNAME --env ANCHORECTL_PASSWORD --env ANCHORECTL_URL ${IMAGE} sh -c "syft -o json packages ghcr.io/pvnovarese/2023-03-demo:main | anchorectl image add --no-auto-subscribe --force --wait ghcr.io/pvnovarese/anchore-tools-smoketest:nightly-unstable --from -"
      
        
  Anchore-Enterprise:
    needs: Smoke-Test
    runs-on: ubuntu-latest
    steps:
    
    - name: "Set environmental variables"
      run: |
        echo "IMAGE=${IMAGE_REGISTRY}/${GITHUB_REPOSITORY}:${IMAGE_TAG}${TAG_BASE}-test" >> $GITHUB_ENV
        
    - name: Checkout Code
      uses: actions/checkout@v3 
      
    - name: Install CLI Tools
      run: |
        curl -sSfL https://anchorectl-releases.anchore.io/anchorectl/install.sh | sh -s -- -b /usr/local/bin v1.2.0
    
    - name: Add Image to Anchore Enterprise Queue and Wait for Analysis
      run: |
        anchorectl image add --force --no-auto-subscribe --wait --annotation builder=${GITHUB_ACTOR} --annotation build_tool=github --dockerfile ${DOCKERFILE} ${IMAGE}
        
    - name: Pull Policy Evaluation
      run: |
        set -o pipefail
        anchorectl image check --fail-based-on-results --detail ${IMAGE} 
        
        
  Release:
    needs: Anchore-Enterprise
    runs-on: ubuntu-latest
    steps:
    
    - name: "Set environmental variables"
      run: |
        ls
        echo "IMAGE=${IMAGE_REGISTRY}/${GITHUB_REPOSITORY}:${IMAGE_TAG}${TAG_BASE}-test" >> $GITHUB_ENV
        echo "RELEASE_IMAGE=${IMAGE_REGISTRY}/${GITHUB_REPOSITORY}:${IMAGE_TAG}${TAG_BASE}" >> $GITHUB_ENV
        echo "RELEASE_IMAGE_TIMESTAMP=${IMAGE_REGISTRY}/${GITHUB_REPOSITORY}:${IMAGE_TAG}${TAG_BASE}-$(date +%Y%m%d.%H%M%S)" >> $GITHUB_ENV
        
    - name: Checkout Code
      uses: actions/checkout@v3 
      
    - name: Install CLI Tools
      run: |
        curl -sSfL https://anchorectl-releases.anchore.io/anchorectl/install.sh | sh -s -- -b /usr/local/bin v1.2.0
        
    - name: Login to Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${IMAGE_REGISTRY} -u ${GITHUB_ACTOR} --password-stdin
                
#    - name: Login to Registry
#      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login ${RELEASE_REGISTRY} -u ${GITHUB_ACTOR} --password-stdin

    - name: Promote Image
      run: |
        docker pull ${IMAGE}
        docker tag ${IMAGE} ${RELEASE_IMAGE}
        docker push ${RELEASE_IMAGE}
        docker tag ${RELEASE_IMAGE} ${RELEASE_IMAGE_TIMESTAMP}
        docker push ${RELEASE_IMAGE_TIMESTAMP}
        
    - name: Add Image to Anchore Enterprise Queue and Wait for Analysis
      run: |
        anchorectl image add --force --no-auto-subscribe --wait --annotation builder=${GITHUB_ACTOR} --annotation build_tool=github --dockerfile ${DOCKERFILE} ${RELEASE_IMAGE}
    - name: Activate Subscriptions
      run: |
        anchorectl subscription activate ${RELEASE_IMAGE} policy_eval
        anchorectl subscription activate ${RELEASE_IMAGE} vuln_update        
